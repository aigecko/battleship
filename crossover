#!/usr/bin/ruby
require 'base64'
require_relative 'MHPlayer/expression'
ARGV.empty? and p"NO AARGV" and exit
in1=open("players/#{ARGV[0]}.rb","rb").read
in2=open("players/#{ARGV[1]}.rb","rb").read
out1=open("players/#{ARGV[2]}.rb","wb")
out2=open("players/#{ARGV[3]}.rb","wb")

s1=Marshal.load(
  Base64.decode64(
    in1.match(/.*__END__\n([\S\n]+)/)[1].gsub!("\n","")))

s2=Marshal.load(
  Base64.decode64(
    in2.match(/.*__END__\n([\S\n]+)/)[1].gsub!("\n","")))

if ARGV[4]  
  s1.flatten.reject{|s| s.op==:R }.shuffle.first.single_swap(
    s2.flatten.reject{|s| s.op==:R}.shuffle.first)
else
  s1.flatten.reject{|s| s.op==:R }.shuffle.first.swap(
    s2.flatten.reject{|s| s.op==:R}.shuffle.first)

  S.init(s1.leaf,5-s1.length) if s1.length<5
  S.init(s2.leaf,5-s2.length) if s2.length<5
end



if 0.05<rand()
  str=s1
  ptr=str
  tmp=S.new(:Q)
  while(ptr.op!=:Q)
    str=ptr.list.first
    ptr.list[0]=tmp
    tmp=ptr
    ptr=str
  end
  ptr.list=tmp
  s1=str.list
end
if 0.05<rand()
  str=s2
  ptr=str
  tmp=S.new(:Q)
  while(ptr.op!=:Q)
    str=ptr.list.first
    ptr.list[0]=tmp
    tmp=ptr
    ptr=str
  end
  ptr.list=tmp
  s2=str.list
end

s1.write(out1,ARGV[2].to_i-1)
s2.write(out2,ARGV[3].to_i-1)